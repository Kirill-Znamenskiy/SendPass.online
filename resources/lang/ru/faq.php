<?php
// 'key' => null, // mean fallback to English translation
return [
    'frequently_asked_questions' => 'Часто Задаваемые Вопросы',

    'question1' => 'Как работает этот проект?',
    'answer1' => '
        Иногда возникает необходимость отправить  кому-то свой пароль. 
        Отправлять его открытым текстом - очень плохая идея. 
        С помощью :app_link Вы можете спрятать свой пароль за безопасной ссылкой доступа, с ограничениями на количество просмотров и/или время жизни. 
        И вот уже эту безопасную ссылку доступа можно спокойно отправлять адресату эл.письмом или через мессенждер.
    ',

    'question2' => 'Почему "отправлять пароль открытым тестом - плохая идея"?',
    'answer2' => '
        Есть несколько причин: <ul>
            <li>
                Все отправленные вами данные навсегда остаются в архиве переписки в открытом виде, 
                поэтому в случае взлома (к сожалению такое может случиться) злоумышленник получит доступ ко всем таким паролям. 
                Вообще ко всем! Даже к тем что вы отправляли много лет назад! 
                На самом деле злоумышленники в первую очередь лезут как раз в архивы эл.почты и историю чатов, и ищут там данные кредитных карт, доступы и пароли.
            </li>
            <li>
                Пока ваше сообщение дойдет до адресата, оно побывает во множестве мест (сервера пересылки, спам-анализаторы и т.д.), 
                и в каждом из них сохранится его копия, где-то ненадолго, а где-то навсегда(привет Google). 
                И вот оттуда их удалить уже никак не получится... Оттуда, рано или поздно, Ваш пароль попадет в базы данных паролей. 
                И вот уже ваш аккаунт появляется в списке из 1М скомпрометированных аккаунтов.
            </li>
        </ul>
    
        Используя :app_link Вы избегаете всех этих проблем. 
        Для каждой отправки пароля генерируется уникальный URL, известный только Вам. 
        А после окончания времени жизни или исчерпания количества просмотров Ваш пароль будет безвозвратно удален. 
        И это замечательно!

    ',


    'question3' => 'Я вам не верю! Почему я должен доверять SendPass свой пароль?',
    'answer3' => '
        Конечно можно просто отправить пароль в открытом виде, но у такого подхода, на самом деле, есть несколько недостатков:
        <ul>
            <li>
                все отправленные вами данные навсегда останутся в архиве переписки в открытом виде, поэтому в случае взлома (к сожалению такое может случиться) злоумышленник получит доступ ко всем таким паролям.
                Вообще ко всем! Даже к тем что вы отправляли много лет назад! На самом деле злоумышленники в первую очередь лезут как раз в архивы эл.почты и историю чатов, и ищут там данные кредитных карт, доступы и пароли.
            </li>
            <li>
                пока ваше сообщение дойдет до адресата, оно побывает во множестве точек (сервера пересылки, спам-анализаторы и т.д.), и в каждой из них сохранится его копия, где-то ненадолго, а где-то навсегда(привет Google). 
                И вот оттуда их удалить уже никак не получится...
            </li>
        </ul>
        Если же использовать :app_link то можно избежать этих проблем. По-сути где и как бы вы не отправляли свои данные - они самоудалятся через установленное Вами время, и это замечательно! 
    ',

    'question4' => 'Я вам не верю! Почему я должен доверять :app_name свой пароль?',
    'answer4' => '
        И правильно делаете что не верите! Здоровый скептицизм - залог хорошей безопасности.
        <br/>
        <br/>Но Вам и не нужно доверять проекту польностью. Более того <a href="/about/">я</a> настаиваю чтобы Вы этого не делали! 
        <br/>
        <br/>Паролю всегда нужен контекст - логин и/или адрес подключения. 
        <br/>Рекомендую делать так - через :app_link сформировать безопасную ссылку доступа <u>только для пароля</u>. Только пароль! 
        <br/>Ни логин, ни адрес подключения не надо вводить здесь вместе с паролем! Очень прошу вас разделить данные!
        <br/>
        <br/>Таким образом в :app_name будет храниться только пароль, без вообще какого-либо контекста. Поэтому и воспользоваться им будет невозможно.
        <br/>А после исчерпания количества просмотров или окончании времени жизни - все пароли будут навсегда удалены из базы данных автоматически.
        <br/>
        <br/>Исходный код проекта выложен в открытый доступ на <a class="github" target="_blank" href="https://github.com/kirill-znamenskiy/sendpass.online">GitHub</a>, 
        а в футере отображается вывод команды "git show --no-color --no-patch --decorate", выполненной в рабочем каталоге проекта.
        
        И правильно делаете что не верите! Здоровый скептицизм - залог хорошей безопасности.  
        <br/>
        <br/>Но Вам и не нужно доверять SendPass полностью. Более того я (создатель SendPass) настаиваю - не делайте этого!  
        <br/>
        <br/>Паролю всегда нужен контекст - логин и/или адрес подключения. 
        <br/>Рекомендую делать так - через SendPass сформировать безопасную ссылку доступа <u>только для пароля</u>. Только пароль!
         <br/>Ни логин, ни адрес подключения не надо вводить рядом с паролем! 
             Чтобы ни у меня, ни у злоумышленников которые возможно когда-нибудь смогут получить доступ 
             к БД проета (такое к сожалению случается), в общем, чтобы ни у кого не было даже теоретической возможности 
             узнать откуда этот пароль, где его использовать, с каким логином вводить. 
        <br/>Очень прошу вас разделить данные!  Тогда в базе данных :app_name будет храниться только пароль, вообще без какого-либо контекста. 
        <br/>И воспользоваться им будет невозможно. А потом он и вообще навсегда будет удален. 
        <br/>
        <br/>
        <br/> Все вышенаписанное Вы можете сами проверить - исходный код проекта выложен в открытый доступ на <a class="github" target="_blank" href="https://github.com/kirill-znamenskiy/sendpass.online">GitHub</a>, 
             а в футере отображается вывод команды "git show --no-color --no-patch --decorate", выполненной в рабочем каталоге проекта.
        <br/>
        <br/>Подробнее о проекте и обо мне написано <a target="_blank" href="/about/">здесь</a>.
    ',

    'question5' => 'Есть какая-то возможность посмотреть пароль после того как истечет его время жизни?',
    'answer5' => '
        Нет, никакой возможности нет. 
        Пароль безвозвратно удаляется из базы данных, сразу же после последнего показа или по истечении его времени жизни.
    ',

    'question6' => 'Как вы зарабатываете? На что существует проект?',
    'answer6' => '
        Никак. Это домашний проект, который я изначально сделал под личные нужны и использовал тоже только сам. 
        А потом появилось время доделать его в полноценный проект и выложить для свободного использования. 
        <br/>Подробнее о проекте и обо мне написано <a target="_blank" href="/about/">здесь</a>.
    ',

    'question7' => 'Зачем вообще отправлять кому-то свой пароль?',
    'answer7' => '
        Вообще-то конечно лучше всего этого никогда не делать. 
        Через SendPass вы можете защищать вообще-то любые текстовые данные, например ссылки доступа к гугл-документам или просто важные сообщения.
        <br/><br/>
        Лично мне вот иногда приходится привлекать фрилансеров. 
        И для работы приходится отправлять им разные доступы - FTP, к сайту, к сторонним сервисам.
        <br/>А еще я таким образом иногда узнаю что фрилансер еще не приступил к работе, хотя доступы запрашивал прям срочно срочно, потому что он вот уже готов начинать, только доступов ему не хватает)
        <br/>Ну и ссылки доступа к гугл-документам я тоже часто отправляю через :app_link чтобы они не хранились потом в архивах.
    ',

    'answer11' => 'Иногда таким образом узнаю что фрилансер так и не начал работу в течение суток, хотя доступы просил прям срочно, срочно))',
    'answer12' => '<br/><br/>:app_link это не комплексное решение для обеспечения безопасности коммуникации, он только помогает избежать бессрочного хранения паролей в архивах.',
];